{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { CREATE_JOB_TYPE_FAIL, CREATE_JOB_TYPE_REQUEST, CREATE_JOB_TYPE_SUCCESS, JOB_TYPE_LOAD_FAIL, JOB_TYPE_LOAD_REQUEST, JOB_TYPE_LOAD_SUCCESS } from '../constants/jobTypeConstant';\n\n// load jobs type\nexport const jobTypeLoadAction = () => async dispatch => {\n  dispatch({\n    type: JOB_TYPE_LOAD_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.get('/api/type/jobs');\n    dispatch({\n      type: JOB_TYPE_LOAD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: JOB_TYPE_LOAD_FAIL,\n      payload: error.response.data.error\n    });\n  }\n};\n\n// create jobs category\nexport const createJobTypeAction = jobtype => async dispatch => {\n  dispatch({\n    type: CREATE_JOB_TYPE_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/type/create\", jobtype);\n    dispatch({\n      type: CREATE_JOB_TYPE_SUCCESS,\n      payload: data\n    });\n    toast.success(\"Job type created successfully\");\n  } catch (error) {\n    dispatch({\n      type: CREATE_JOB_TYPE_FAIL,\n      payload: error.response.data.error\n    });\n    toast.error(error.response.data.error);\n  }\n};","map":{"version":3,"names":["axios","toast","CREATE_JOB_TYPE_FAIL","CREATE_JOB_TYPE_REQUEST","CREATE_JOB_TYPE_SUCCESS","JOB_TYPE_LOAD_FAIL","JOB_TYPE_LOAD_REQUEST","JOB_TYPE_LOAD_SUCCESS","jobTypeLoadAction","dispatch","type","data","get","payload","error","response","createJobTypeAction","jobtype","post","success"],"sources":["C:/Users/Sumit/OneDrive/Desktop/job-portal-mern-stack-main/bonus/frontend/src/redux/actions/jobTypeAction.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport {\n    CREATE_JOB_TYPE_FAIL,\n    CREATE_JOB_TYPE_REQUEST,\n    CREATE_JOB_TYPE_SUCCESS,\n    JOB_TYPE_LOAD_FAIL,\n    JOB_TYPE_LOAD_REQUEST,\n    JOB_TYPE_LOAD_SUCCESS\n} from '../constants/jobTypeConstant';\n\n\n// load jobs type\nexport const jobTypeLoadAction = () => async (dispatch) => {\n    dispatch({ type: JOB_TYPE_LOAD_REQUEST });\n    try {\n        const { data } = await axios.get('/api/type/jobs');\n        dispatch({\n            type: JOB_TYPE_LOAD_SUCCESS,\n            payload: data\n        });\n    } catch (error) {\n        dispatch({\n            type: JOB_TYPE_LOAD_FAIL,\n            payload: error.response.data.error\n        });\n    }\n}\n\n\n// create jobs category\nexport const createJobTypeAction = (jobtype) => async (dispatch) => {\n    dispatch({ type: CREATE_JOB_TYPE_REQUEST })\n\n    try {\n        const { data } = await axios.post(\"/api/type/create\", jobtype)\n        dispatch({\n            type: CREATE_JOB_TYPE_SUCCESS,\n            payload: data\n        })\n        toast.success(\"Job type created successfully\");\n\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_JOB_TYPE_FAIL,\n            payload: error.response.data.error\n        })\n        toast.error(error.response.data.error);\n\n    }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SACIC,oBAAoB,EACpBC,uBAAuB,EACvBC,uBAAuB,EACvBC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,QAClB,8BAA8B;;AAGrC;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACvDA,QAAQ,CAAC;IAAEC,IAAI,EAAEJ;EAAsB,CAAC,CAAC;EACzC,IAAI;IACA,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,gBAAgB,CAAC;IAClDH,QAAQ,CAAC;MACLC,IAAI,EAAEH,qBAAqB;MAC3BM,OAAO,EAAEF;IACb,CAAC,CAAC;EACN,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZL,QAAQ,CAAC;MACLC,IAAI,EAAEL,kBAAkB;MACxBQ,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACG;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;;AAGD;AACA,OAAO,MAAME,mBAAmB,GAAIC,OAAO,IAAK,MAAOR,QAAQ,IAAK;EAChEA,QAAQ,CAAC;IAAEC,IAAI,EAAEP;EAAwB,CAAC,CAAC;EAE3C,IAAI;IACA,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMX,KAAK,CAACkB,IAAI,CAAC,kBAAkB,EAAED,OAAO,CAAC;IAC9DR,QAAQ,CAAC;MACLC,IAAI,EAAEN,uBAAuB;MAC7BS,OAAO,EAAEF;IACb,CAAC,CAAC;IACFV,KAAK,CAACkB,OAAO,CAAC,+BAA+B,CAAC;EAGlD,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZL,QAAQ,CAAC;MACLC,IAAI,EAAER,oBAAoB;MAC1BW,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACG;IACjC,CAAC,CAAC;IACFb,KAAK,CAACa,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACG,KAAK,CAAC;EAE1C;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
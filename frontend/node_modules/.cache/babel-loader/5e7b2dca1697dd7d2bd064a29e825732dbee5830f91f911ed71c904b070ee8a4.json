{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sumit\\\\OneDrive\\\\Desktop\\\\job-portal-mern-stack-main\\\\JOB_PORTAL\\\\frontend\\\\src\\\\pages\\\\admin\\\\DashCreateCategory.js\",\n  _s = $RefreshSig$();\nimport { Box, Typography } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createJobTypeAction } from '../../redux/actions/jobTypeAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  jobTypeName: yup.string('Enter a Category').required('Category is required')\n});\nconst DashCreateCategory = () => {\n  _s();\n  const {\n    user\n  } = useSelector(state => state.userProfile);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      user: user && user._id,\n      jobTypeName: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, actions) => {\n      dispatch(createJobTypeAction(values));\n      //alert(JSON.stringify(values, null, 2));\n      actions.resetForm();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '100%',\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        pt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        onSubmit: formik.handleSubmit,\n        component: \"form\",\n        className: \"form_style border-style\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            sx: {\n              pb: 3\n            },\n            children: \"Create a Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            sx: {\n              mb: 3\n            },\n            fullWidth: true,\n            id: \"jobTypeName\",\n            label: \"category\",\n            name: \"jobTypeName\",\n            InputLabelProps: {\n              shrink: true\n            },\n            placeholder: \"category name\",\n            value: formik.values.jobTypeName,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            error: formik.touched.jobTypeName && Boolean(formik.errors.jobTypeName),\n            helperText: formik.touched.jobTypeName && formik.errors.jobTypeName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            type: \"submit\",\n            children: \"Create category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(DashCreateCategory, \"a0hNakxrQVhafA+GFdltqOJZoCU=\", false, function () {\n  return [useSelector, useDispatch, useFormik];\n});\n_c = DashCreateCategory;\nexport default DashCreateCategory;\nvar _c;\n$RefreshReg$(_c, \"DashCreateCategory\");","map":{"version":3,"names":["Box","Typography","TextField","Button","useFormik","yup","useDispatch","useSelector","createJobTypeAction","jsxDEV","_jsxDEV","Fragment","_Fragment","validationSchema","object","jobTypeName","string","required","DashCreateCategory","_s","user","state","userProfile","dispatch","formik","initialValues","_id","onSubmit","values","actions","resetForm","children","sx","height","display","alignItems","justifyContent","pt","handleSubmit","component","className","flexDirection","width","variant","pb","fileName","_jsxFileName","lineNumber","columnNumber","mb","fullWidth","id","label","name","InputLabelProps","shrink","placeholder","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","type","_c","$RefreshReg$"],"sources":["C:/Users/Sumit/OneDrive/Desktop/job-portal-mern-stack-main/JOB_PORTAL/frontend/src/pages/admin/DashCreateCategory.js"],"sourcesContent":["import { Box, Typography } from '@mui/material'\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createJobTypeAction } from '../../redux/actions/jobTypeAction';\n\n\n\nconst validationSchema = yup.object({\n\n    jobTypeName: yup\n        .string('Enter a Category')\n        .required('Category is required'),\n});\n\n\nconst DashCreateCategory = () => {\n\n    const { user } = useSelector(state => state.userProfile);\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n        initialValues: {\n            user: user && user._id,\n            jobTypeName: ''\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values, actions) => {\n            dispatch(createJobTypeAction(values))\n            //alert(JSON.stringify(values, null, 2));\n            actions.resetForm();\n        },\n    });\n\n\n    return (\n        <>\n\n            <Box sx={{ height: '100%', display: \"flex\", alignItems: \"center\", justifyContent: \"center\", pt: 4 }}>\n\n\n                <Box onSubmit={formik.handleSubmit} component=\"form\" className='form_style border-style' >\n                    <Box sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", width: \"100%\" }}>\n                        <Typography variant=\"h5\" component=\"h2\" sx={{ pb: 3 }}>\n                            Create a Category\n                        </Typography>\n                        <TextField sx={{ mb: 3 }}\n                            fullWidth\n                            id=\"jobTypeName\"\n                            label=\"category\"\n                            name='jobTypeName'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            placeholder=\"category name\"\n                            value={formik.values.jobTypeName}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            error={formik.touched.jobTypeName && Boolean(formik.errors.jobTypeName)}\n                            helperText={formik.touched.jobTypeName && formik.errors.jobTypeName}\n                        />\n\n\n                        <Button fullWidth variant=\"contained\" type='submit' >Create category</Button>\n                    </Box>\n                </Box>\n            </Box>\n\n        </>\n    )\n}\n\nexport default DashCreateCategory"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
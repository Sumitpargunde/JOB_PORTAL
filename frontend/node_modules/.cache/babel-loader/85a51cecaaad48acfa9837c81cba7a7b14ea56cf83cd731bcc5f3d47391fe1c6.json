{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sumit\\\\OneDrive\\\\Desktop\\\\job-portal-mern-stack-main\\\\bonus\\\\frontend\\\\src\\\\pages\\\\admin\\\\DashCategory.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Box, Button, Paper, Typography } from '@mui/material';\nimport { DataGrid, gridClasses } from '@mui/x-data-grid';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jobTypeLoadAction } from '../../redux/actions/jobTypeAction';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashCategory = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(jobTypeLoadAction());\n  }, [dispatch]);\n  const {\n    jobType,\n    loading\n  } = useSelector(state => state.jobTypeAll);\n  let data = [];\n  data = jobType !== undefined && jobType.length > 0 ? jobType : [];\n\n  //delete job by Id\n  const deleteJobCategoryById = (e, id) => {\n    console.log(id);\n  };\n  const columns = [{\n    field: '_id',\n    headerName: 'Category ID',\n    width: 150,\n    editable: true\n  }, {\n    field: 'jobTypeName',\n    headerName: 'Category',\n    width: 150\n  }, {\n    field: 'createdAt',\n    headerName: 'Create At',\n    width: 150,\n    renderCell: params => moment(params.row.createdAt).format('YYYY-MM-DD HH:MM:SS')\n  }, {\n    field: \"Actions\",\n    width: 200,\n    renderCell: values => /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"170px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            color: \"white\",\n            textDecoration: \"none\"\n          },\n          to: `/admin/edit/user/${values.row._id}`,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: e => deleteJobCategoryById(e, values.row._id),\n        variant: \"contained\",\n        color: \"error\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        color: \"white\",\n        pb: 3\n      },\n      children: \"Jobs category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        pb: 2,\n        display: \"flex\",\n        justifyContent: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"success\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 72\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            color: \"white\",\n            textDecoration: \"none\"\n          },\n          to: \"/admin/category/create\",\n          children: \"Create category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 85\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        bgcolor: \"secondary.midNightBlue\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 400,\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          getRowId: row => row._id,\n          sx: {\n            '& .MuiTablePagination-displayedRows': {\n              color: 'white'\n            },\n            color: 'white',\n            [`& .${gridClasses.row}`]: {\n              bgcolor: theme =>\n              // theme.palette.mode === 'light' ? grey[200] : grey[900],\n              theme.palette.secondary.main\n            },\n            button: {\n              color: '#ffffff'\n            }\n          },\n          rows: data,\n          columns: columns,\n          pageSize: 3,\n          rowsPerPageOptions: [3],\n          checkboxSelection: true\n          // components={{ Toolbar: GridToolbarExport }}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(DashCategory, \"5gfDnIgdpzI8jO12bLpMVd+ejJ8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = DashCategory;\nexport default DashCategory;\nvar _c;\n$RefreshReg$(_c, \"DashCategory\");","map":{"version":3,"names":["React","useEffect","Box","Button","Paper","Typography","DataGrid","gridClasses","Link","AddIcon","useDispatch","useSelector","jobTypeLoadAction","moment","jsxDEV","_jsxDEV","DashCategory","_s","dispatch","jobType","loading","state","jobTypeAll","data","undefined","length","deleteJobCategoryById","e","id","console","log","columns","field","headerName","width","editable","renderCell","params","row","createdAt","format","values","sx","display","justifyContent","children","variant","style","color","textDecoration","to","_id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","pb","startIcon","bgcolor","height","getRowId","theme","palette","secondary","main","button","rows","pageSize","rowsPerPageOptions","checkboxSelection","_c","$RefreshReg$"],"sources":["C:/Users/Sumit/OneDrive/Desktop/job-portal-mern-stack-main/bonus/frontend/src/pages/admin/DashCategory.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { Box, Button, Paper, Typography } from '@mui/material'\nimport { DataGrid, gridClasses } from '@mui/x-data-grid';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@mui/icons-material/Add';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jobTypeLoadAction } from '../../redux/actions/jobTypeAction';\n\nimport moment from 'moment'\n\n\nconst DashCategory = () => {\n\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(jobTypeLoadAction())\n    }, [dispatch]);\n\n\n    const { jobType, loading } = useSelector(state => state.jobTypeAll);\n    let data = [];\n    data = (jobType !== undefined && jobType.length > 0) ? jobType : []\n\n    //delete job by Id\n    const deleteJobCategoryById = (e, id) => {\n        console.log(id)\n    }\n\n    const columns = [\n\n        {\n            field: '_id',\n            headerName: 'Category ID',\n            width: 150,\n            editable: true,\n        },\n        {\n            field: 'jobTypeName',\n            headerName: 'Category',\n            width: 150,\n        },\n        {\n            field: 'createdAt',\n            headerName: 'Create At',\n            width: 150,\n            renderCell: (params) => (\n                moment(params.row.createdAt).format('YYYY-MM-DD HH:MM:SS')\n            )\n\n        },\n\n        {\n            field: \"Actions\",\n            width: 200,\n            renderCell: (values) => (\n                <Box sx={{ display: \"flex\", justifyContent: \"space-between\", width: \"170px\" }}>\n                    <Button variant=\"contained\"><Link style={{ color: \"white\", textDecoration: \"none\" }} to={`/admin/edit/user/${values.row._id}`}>Edit</Link></ Button>\n                    < Button onClick={(e) => deleteJobCategoryById(e, values.row._id)} variant=\"contained\" color=\"error\">Delete</ Button>\n                </Box>\n            )\n        }\n    ];\n\n\n    return (\n        <Box >\n\n            <Typography variant=\"h4\" sx={{ color: \"white\", pb: 3 }}>\n                Jobs category\n            </Typography>\n            <Box sx={{ pb: 2, display: \"flex\", justifyContent: \"right\" }}>\n                <Button variant=\"contained\" color=\"success\" startIcon={<AddIcon />}><Link style={{ color: \"white\", textDecoration: \"none\" }} to='/admin/category/create'>Create category</Link></ Button>\n            </Box>\n            <Paper sx={{ bgcolor: \"secondary.midNightBlue\" }} >\n\n                <Box sx={{ height: 400, width: '100%' }}>\n                    <DataGrid\n                        getRowId={(row) => row._id}\n                        sx={{\n\n                            '& .MuiTablePagination-displayedRows': {\n                                color: 'white',\n                            },\n                            color: 'white',\n                            [`& .${gridClasses.row}`]: {\n                                bgcolor: (theme) =>\n                                    // theme.palette.mode === 'light' ? grey[200] : grey[900],\n                                    theme.palette.secondary.main\n                            },\n                            button: {\n                                color: '#ffffff'\n                            }\n\n                        }}\n                        rows={data}\n                        columns={columns}\n                        pageSize={3}\n                        rowsPerPageOptions={[3]}\n                        checkboxSelection\n                    // components={{ Toolbar: GridToolbarExport }}\n                    />\n                </Box>\n            </Paper>\n\n        </Box>\n    )\n}\n\nexport default DashCategory"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nimport { toast } from \"react-toastify\";\nimport { ALL_USER_LOAD_FAIL, ALL_USER_LOAD_REQUEST, ALL_USER_LOAD_SUCCESS, USER_APPLY_JOB_FAIL, USER_APPLY_JOB_REQUEST, USER_APPLY_JOB_SUCCESS, USER_LOAD_FAIL, USER_LOAD_REQUEST, USER_LOAD_SUCCESS, USER_LOGOUT_FAIL, USER_LOGOUT_REQUEST, USER_LOGOUT_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNUP_FAIL, USER_SIGNUP_REQUEST, USER_SIGNUP_SUCCESS } from '../constants/userConstant';\nexport const userSignInAction = user => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/signin\", user);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    toast.success(\"Login Successfully!\");\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response.data.error\n    });\n    toast.error(error.response.data.error);\n  }\n};\n\n// user sign up action\nexport const userSignUpAction = user => async dispatch => {\n  dispatch({\n    type: USER_SIGNUP_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/signup\", user);\n    dispatch({\n      type: USER_SIGNUP_SUCCESS,\n      payload: data\n    });\n    toast.success(\"Register Successfully!\");\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNUP_FAIL,\n      payload: error.response.data.error\n    });\n    toast.error(error.response.data.error);\n  }\n};\n\n//log out action\nexport const userLogoutAction = () => async dispatch => {\n  dispatch({\n    type: USER_LOGOUT_REQUEST\n  });\n  try {\n    localStorage.removeItem('userInfo');\n    const {\n      data\n    } = await axios.get(\"/api/logout\");\n    dispatch({\n      type: USER_LOGOUT_SUCCESS,\n      payload: data\n    });\n    toast.success(\"Log out successfully!\");\n  } catch (error) {\n    dispatch({\n      type: USER_LOGOUT_FAIL,\n      payload: error.response.data.error\n    });\n    toast.error(error.response.data.error);\n  }\n};\n\n//user profile action\nexport const userProfileAction = () => async dispatch => {\n  dispatch({\n    type: USER_LOAD_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/me\");\n    dispatch({\n      type: USER_LOAD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOAD_FAIL,\n      payload: error.response.data.error\n    });\n  }\n};\n\n//all user action\nexport const allUserAction = () => async dispatch => {\n  dispatch({\n    type: ALL_USER_LOAD_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/allusers\");\n    dispatch({\n      type: ALL_USER_LOAD_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_USER_LOAD_FAIL,\n      payload: error.response.data.error\n    });\n  }\n};\n\n//user job apply action\nexport const userApplyJobAction = job => async dispatch => {\n  dispatch({\n    type: USER_APPLY_JOB_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.post(\"/api/user/jobhistory\", job);\n    dispatch({\n      type: USER_APPLY_JOB_SUCCESS,\n      payload: data\n    });\n    toast.success(\"Apply Successfully for this Job!\");\n  } catch (error) {\n    dispatch({\n      type: USER_APPLY_JOB_FAIL,\n      payload: error.response.data.error\n    });\n    toast.error(error.response.data.error);\n  }\n};","map":{"version":3,"names":["axios","toast","ALL_USER_LOAD_FAIL","ALL_USER_LOAD_REQUEST","ALL_USER_LOAD_SUCCESS","USER_APPLY_JOB_FAIL","USER_APPLY_JOB_REQUEST","USER_APPLY_JOB_SUCCESS","USER_LOAD_FAIL","USER_LOAD_REQUEST","USER_LOAD_SUCCESS","USER_LOGOUT_FAIL","USER_LOGOUT_REQUEST","USER_LOGOUT_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNUP_FAIL","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","userSignInAction","user","dispatch","type","data","post","localStorage","setItem","JSON","stringify","payload","success","error","response","userSignUpAction","userLogoutAction","removeItem","get","userProfileAction","allUserAction","userApplyJobAction","job"],"sources":["C:/Users/Sumit/OneDrive/Desktop/job-portal-mern-stack-main/bonus/frontend/src/redux/actions/userAction.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from \"react-toastify\";\nimport {\n    ALL_USER_LOAD_FAIL,\n    ALL_USER_LOAD_REQUEST,\n    ALL_USER_LOAD_SUCCESS,\n    USER_APPLY_JOB_FAIL,\n    USER_APPLY_JOB_REQUEST,\n    USER_APPLY_JOB_SUCCESS,\n    USER_LOAD_FAIL,\n    USER_LOAD_REQUEST,\n    USER_LOAD_SUCCESS,\n    USER_LOGOUT_FAIL,\n    USER_LOGOUT_REQUEST,\n    USER_LOGOUT_SUCCESS,\n    USER_SIGNIN_FAIL,\n    USER_SIGNIN_REQUEST,\n    USER_SIGNIN_SUCCESS,\n    USER_SIGNUP_FAIL,\n    USER_SIGNUP_REQUEST,\n    USER_SIGNUP_SUCCESS\n} from '../constants/userConstant';\n\n\n\nexport const userSignInAction = (user) => async (dispatch) => {\n    dispatch({ type: USER_SIGNIN_REQUEST });\n    try {\n        const { data } = await axios.post(\"/api/signin\", user);\n        localStorage.setItem('userInfo', JSON.stringify(data));\n        dispatch({\n            type: USER_SIGNIN_SUCCESS,\n            payload: data\n        });\n        toast.success(\"Login Successfully!\");\n    } catch (error) {\n        dispatch({\n            type: USER_SIGNIN_FAIL,\n            payload: error.response.data.error\n        });\n        toast.error(error.response.data.error);\n    }\n}\n\n// user sign up action\nexport const userSignUpAction = (user) => async (dispatch) => {\n    dispatch({ type: USER_SIGNUP_REQUEST });\n    try {\n        const { data } = await axios.post(\"/api/signup\", user);\n\n        dispatch({\n            type: USER_SIGNUP_SUCCESS,\n            payload: data\n        });\n        toast.success(\"Register Successfully!\");\n    } catch (error) {\n        dispatch({\n            type: USER_SIGNUP_FAIL,\n            payload: error.response.data.error\n        });\n        toast.error(error.response.data.error);\n    }\n}\n\n//log out action\nexport const userLogoutAction = () => async (dispatch) => {\n    dispatch({ type: USER_LOGOUT_REQUEST });\n    try {\n        localStorage.removeItem('userInfo');\n        const { data } = await axios.get(\"/api/logout\");\n        dispatch({\n            type: USER_LOGOUT_SUCCESS,\n            payload: data\n        });\n        toast.success(\"Log out successfully!\");\n    } catch (error) {\n        dispatch({\n            type: USER_LOGOUT_FAIL,\n            payload: error.response.data.error\n        });\n        toast.error(error.response.data.error);\n    }\n}\n\n\n//user profile action\nexport const userProfileAction = () => async (dispatch) => {\n    dispatch({ type: USER_LOAD_REQUEST });\n    try {\n        const { data } = await axios.get(\"/api/me\");\n        dispatch({\n            type: USER_LOAD_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOAD_FAIL,\n            payload: error.response.data.error\n        });\n    }\n}\n\n\n//all user action\nexport const allUserAction = () => async (dispatch) => {\n    dispatch({ type: ALL_USER_LOAD_REQUEST });\n    try {\n        const { data } = await axios.get(\"/api/allusers\");\n        dispatch({\n            type: ALL_USER_LOAD_SUCCESS,\n            payload: data\n        });\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USER_LOAD_FAIL,\n            payload: error.response.data.error\n        });\n    }\n}\n\n//user job apply action\nexport const userApplyJobAction = (job) => async (dispatch) => {\n    dispatch({ type: USER_APPLY_JOB_REQUEST });\n    try {\n        const { data } = await axios.post(\"/api/user/jobhistory\", job);\n\n        dispatch({\n            type: USER_APPLY_JOB_SUCCESS,\n            payload: data\n        });\n        toast.success(\"Apply Successfully for this Job!\");\n    } catch (error) {\n        dispatch({\n            type: USER_APPLY_JOB_FAIL,\n            payload: error.response.data.error\n        });\n        toast.error(error.response.data.error);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sumit\\\\OneDrive\\\\Desktop\\\\job-portal-mern-stack-main\\\\bonus\\\\frontend\\\\src\\\\component\\\\SearchInputEl.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Box, Button, InputBase } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  search: yup.string('Enter your search query').required('this field can not be empty')\n});\nconst SearchInputEl = () => {\n  _s();\n  const navigate = useNavigate();\n  const onSubmit = (values, actions) => {\n    //alert(values.search);\n    const {\n      search\n    } = values;\n    if (search.trim()) {\n      navigate(`/search/${search}`);\n    } else {\n      navigate('/');\n    }\n    actions.resetForm();\n  };\n  const {\n    values,\n    errors,\n    touched,\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    isSubmitting\n  } = useFormik({\n    initialValues: {\n      search: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      width: '50%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputBase, {\n        sx: {\n          bgcolor: 'white',\n          padding: '10px',\n          color: \"rgba(0, 0, 0, 0.9)\"\n        },\n        fullWidth: true,\n        id: \"search\",\n        name: \"search\",\n        label: \"search\",\n        placeholder: \"ex: developer, front end\",\n        value: values.search,\n        onChange: handleChange,\n        error: touched.search && Boolean(errors.search)\n        // helperText={touched.search && errors.search}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"span\",\n      sx: {\n        color: 'orange'\n      },\n      children: touched.search && errors.search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchInputEl, \"OYrsHMvuvNKdPLt8xNg9xd2HjL4=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = SearchInputEl;\nexport default SearchInputEl;\nvar _c;\n$RefreshReg$(_c, \"SearchInputEl\");","map":{"version":3,"names":["React","useFormik","yup","Box","Button","InputBase","useNavigate","jsxDEV","_jsxDEV","validationSchema","object","search","string","required","SearchInputEl","_s","navigate","onSubmit","values","actions","trim","resetForm","errors","touched","handleBlur","handleChange","handleSubmit","isSubmitting","initialValues","style","width","children","sx","display","justifyContent","bgcolor","padding","color","fullWidth","id","name","label","placeholder","value","onChange","error","Boolean","fileName","_jsxFileName","lineNumber","columnNumber","variant","type","disabled","component","_c","$RefreshReg$"],"sources":["C:/Users/Sumit/OneDrive/Desktop/job-portal-mern-stack-main/bonus/frontend/src/component/SearchInputEl.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { Box, Button, InputBase } from '@mui/material'\nimport { useNavigate } from 'react-router-dom';\n\n\nconst validationSchema = yup.object({\n    search: yup\n        .string('Enter your search query')\n        .required('this field can not be empty'),\n});\n\nconst SearchInputEl = () => {\n\n    const navigate = useNavigate();\n\n    const onSubmit = (values, actions) => {\n        //alert(values.search);\n        const { search } = values;\n        if (search.trim()) {\n            navigate(`/search/${search}`);\n        } else {\n            navigate('/');\n        }\n        actions.resetForm();\n    }\n\n    const { values, errors, touched, handleBlur, handleChange, handleSubmit, isSubmitting } = useFormik({\n        initialValues: {\n            search: '',\n        },\n\n        validationSchema: validationSchema,\n        onSubmit\n    });\n\n    return (\n\n        <form onSubmit={handleSubmit} style={{ width: '50%' }}>\n            <Box sx={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\n                {/* <Search> */}\n\n                <InputBase sx={{ bgcolor: 'white', padding: '10px', color: \"rgba(0, 0, 0, 0.9)\" }}\n                    fullWidth={true}\n                    id=\"search\"\n                    name=\"search\"\n                    label=\"search\"\n                    placeholder='ex: developer, front end'\n                    value={values.search}\n                    onChange={handleChange}\n                    error={touched.search && Boolean(errors.search)}\n                // helperText={touched.search && errors.search}\n                />\n\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\" disabled={isSubmitting}>\n                    Search\n                </Button>\n            </Box>\n            <Box component='span' sx={{ color: 'orange' }}>{touched.search && errors.search}</Box>\n        </form>\n\n    );\n};\n\nexport default SearchInputEl;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}